<level>
<description>The Robot Priority Assigner is ready for debugging.
Use the &lt;color=#ffff00ff&gt;PRINTER&lt;/color&gt; tool to check the priorities array.
Figure out where the bug is and use the BUGCATCHER to catch it.</description>
<next-level>tutorial2.xml</next-level>
<introtext>The final version of the Assigner sorts all numbers.
Can you figure out what is wrong this time?</introtext>
<endtext>All the bugs have been found.
You've fixed the Priority Assigner!</endtext>
<timelimit>180</timelimit>
<tools>
<tool name="printer" enabled="true" count="10"/>
</tools>
<code language="c++">//Robot Priority Assigner
//PrioritizeAll sorts an unsorted list of elements
//None of the priorities list needs to be sorted
//PrioritizeAll returns the sorted list from largest to smallest

int[] PrioritizeAll(int priorities[], int numOfTargets){  
    <print text="[32,22,43,99,5]" col="4">cout &lt;&lt; priorities;
	</print>
    <print text="5" col="4">cout &lt;&lt; numOfTargets;
	</print>
    int i=1,$bug   int i = 1, j = 0;$j=1;
    while (i&lt;numOfTargets){
        <print text="[32,22,43,99,5]
[32,99,22,43,5]
[32,99,43,22,5]
[32,99,43,22,5]" col="4" tool="1,0,0,0,0,0">cout &lt;&lt; priorities;</print>
        while (j&lt;numOfTargets){
            <print text="[32,22,43,99,5]
[32,99,43,22,5]
[32,99,43,22,5]
[32,99,43,22,5]
[32,99,43,22,5]
..." col="4">cout &lt;&lt; priorities;</print>
            if (priorities[i]&gt;priorities[j]){   
                swap(priorities[i],priorities[j]); 
                <print text="[32,99,43,22,5]" col="4">cout &lt;&lt; priorities;</print>				
            } j++;  
        } i++; j=i+1; 
    }  
    return priorities; 
}
</code>
</level>